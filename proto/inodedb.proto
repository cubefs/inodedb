syntax = "proto3";

package inodedb;

option go_package = "github.com/cubefs/inodedb/proto";

enum NodeRole {
    	NODE_ROLE_SINGLE = 0;
    	NODE_ROLE_SHARDSERVER = 1;
	NODE_ROLE_MASTER = 2;
	NODE_ROLE_ROUTER = 4;
}

enum NodeState {
    	NODE_STATE_UNKNOWN = 0;
    	NODE_STATE_ALIVE = 1;
    	NODE_STATE_SUSPECT = 2;
    	NODE_STATE_QUIT = 3;
}

message Node {
	uint32 id = 1;
    	string addr = 2;
    	uint32 grpc_port = 3;
	uint32 http_port = 4;
	NodeRole roles = 5;
	NodeState state = 6;
}

enum FieldType {
	BOOL = 0;
	INT = 1;
	FLOAT = 2;
	STRING = 3;
	EMBEDDING = 4;
}

message Embedding {
	repeated float elements = 1;
	string source = 2;
}

enum IndexOption {
	Null = 0;
	Indexed = 1;
	Fulltext = 2;
	Unique = 3;
}

message FieldMeta {	
	string name = 1;
	FieldType type = 2;
	IndexOption indexed = 3;
}

message Field {
	FieldMeta meta = 1;
	bytes value = 2;
}

message Item {
	uint64 ino = 1;
	repeated Field fields = 2;
}

message Link {
	uint64 parent = 1;
	string name = 2;
	uint64 child = 3;
	bytes fields = 4;
}

message SpaceMeta {
	string name = 1;
	uint64 id = 2;
	repeated FieldMeta fixed_fields = 3;
	uint32 shards = 4;
}

service InodeDB {
	rpc CreateSpace (CreateSpaceRequest) returns (CreateSpaceResponse) {}
	rpc DeleteSpace (DeleteSpaceRequest) returns (DeleteSpaceResponse) {}
	rpc GetSpace (GetSpaceRequest) returns (GetSpaceResponse) {}

	rpc AddShard (AddShardRequest) returns (AddShardResponse) {}
	rpc GetShard (GetShardRequest) returns (GetShardResponse) {}

	rpc InsertItem (InsertItemRequest) returns (InsertItemResponse) {}
	rpc UpdateItem (UpdateItemRequest) returns (UpdateItemResponse) {}
    	rpc DeleteItem (DeleteItemRequest) returns (DeleteItemResponse) {}
	rpc GetItem (GetItemRequest) returns (GetItemResponse) {}
	
	rpc Link (LinkRequest) returns (LinkResponse) {}
	rpc Unlink (UnlinkRequest) returns (UnlinkResponse) {}
	rpc List (ListRequest) returns (ListResponse) {}

    	rpc Search (SearchRequest) returns (SearchResponse) {}

	rpc Metrics (MetricsRequest) returns (MetricsResponse) {}
    	rpc Cluster (ClusterRequest) returns (ClusterResponse) {}
}

message ClusterRequest { 
	string operation = 1;	//Join, Quit, et al.
	Node node_info = 2;
}

message ClusterResponse { }

message CreateSpaceRequest {
	SpaceMeta config = 1;
}

message CreateSpaceResponse { 
	uint64 sid = 1;
}

message DeleteSpaceRequest {
	string name = 1;
	uint64 sid = 2;
}

message DeleteSpaceResponse { }

message GetSpaceRequest {
	string name = 1;
}

message GetSpaceResponse {
	SpaceMeta info = 1;
}

message MetricsRequest {
	string keys = 1;
}

message MetricsResponse {
	bytes metrics = 1;
}


message AddShardRequest {	
    	string space_name = 1 [json_name="space_name"];
	uint32 shard_no = 2 [json_name="shard_number"];
}

message AddShardResponse {
}

message GetShardRequest {	
    	string space_name = 1 [json_name="space_name"];
	uint32 shard_no = 2 [json_name="shard_number"];
}

message GetShardResponse {
}

message InsertItemRequest {
	string space_name = 1;
	uint32 preferred_shard = 2;	// -1 if no preference
	Item item = 3;	//item.ino = 0
}
message InsertItemResponse {
	uint64 ino = 1;
}

message UpdateItemRequest {
	string space_name = 1;
	Item item = 2;
}

message UpdateItemResponse {
}

message DeleteItemRequest {
	string space_name = 1;
	uint64 ino = 2;
}

message DeleteItemResponse {
}

message GetItemRequest {
	string space_name = 1;
	uint64 ino = 2;
}

message GetItemResponse {
	Item item = 1;
}

message LinkRequest {
	string space_name = 1;
	Link link = 2;
}

message LinkResponse { }

message UnlinkRequest {
	string space_name = 1;
	Link link = 2;
}

message UnlinkResponse { }

message ListRequest {
	string space_name = 1;
	uint64 ino = 2;
	uint32 start = 3;
	uint32 num = 4;
}

message ListResponse {
	uint32 num_links = 1;
	repeated Link links = 2;
}

message Query { }

message HighlightRequest { }

message SearchRequest {
    string space_name = 1 [json_name="space_name"];
    Query query = 2;
    uint32 count = 3;
    string sorted_by = 4[json_name="sorted_by"];
    repeated string fields = 5;
}

message SearchResponse {
    uint64 hits = 1;
    repeated Item items = 2;
}
