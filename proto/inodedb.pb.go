// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.24.0
// source: inodedb.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ClusterOperation int32

const (
	ClusterOperation_Join ClusterOperation = 0
	ClusterOperation_Quit ClusterOperation = 2
)

// Enum value maps for ClusterOperation.
var (
	ClusterOperation_name = map[int32]string{
		0: "Join",
		2: "Quit",
	}
	ClusterOperation_value = map[string]int32{
		"Join": 0,
		"Quit": 2,
	}
)

func (x ClusterOperation) Enum() *ClusterOperation {
	p := new(ClusterOperation)
	*p = x
	return p
}

func (x ClusterOperation) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ClusterOperation) Descriptor() protoreflect.EnumDescriptor {
	return file_inodedb_proto_enumTypes[0].Descriptor()
}

func (ClusterOperation) Type() protoreflect.EnumType {
	return &file_inodedb_proto_enumTypes[0]
}

func (x ClusterOperation) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ClusterOperation.Descriptor instead.
func (ClusterOperation) EnumDescriptor() ([]byte, []int) {
	return file_inodedb_proto_rawDescGZIP(), []int{0}
}

type SpaceType int32

const (
	SpaceType_Inode SpaceType = 0
)

// Enum value maps for SpaceType.
var (
	SpaceType_name = map[int32]string{
		0: "Inode",
	}
	SpaceType_value = map[string]int32{
		"Inode": 0,
	}
)

func (x SpaceType) Enum() *SpaceType {
	p := new(SpaceType)
	*p = x
	return p
}

func (x SpaceType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SpaceType) Descriptor() protoreflect.EnumDescriptor {
	return file_inodedb_proto_enumTypes[1].Descriptor()
}

func (SpaceType) Type() protoreflect.EnumType {
	return &file_inodedb_proto_enumTypes[1]
}

func (x SpaceType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SpaceType.Descriptor instead.
func (SpaceType) EnumDescriptor() ([]byte, []int) {
	return file_inodedb_proto_rawDescGZIP(), []int{1}
}

type NodeRole int32

const (
	NodeRole_Single      NodeRole = 0
	NodeRole_ShardServer NodeRole = 1
	NodeRole_Master      NodeRole = 2
	NodeRole_Router      NodeRole = 3
)

// Enum value maps for NodeRole.
var (
	NodeRole_name = map[int32]string{
		0: "Single",
		1: "ShardServer",
		2: "Master",
		3: "Router",
	}
	NodeRole_value = map[string]int32{
		"Single":      0,
		"ShardServer": 1,
		"Master":      2,
		"Router":      3,
	}
)

func (x NodeRole) Enum() *NodeRole {
	p := new(NodeRole)
	*p = x
	return p
}

func (x NodeRole) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NodeRole) Descriptor() protoreflect.EnumDescriptor {
	return file_inodedb_proto_enumTypes[2].Descriptor()
}

func (NodeRole) Type() protoreflect.EnumType {
	return &file_inodedb_proto_enumTypes[2]
}

func (x NodeRole) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NodeRole.Descriptor instead.
func (NodeRole) EnumDescriptor() ([]byte, []int) {
	return file_inodedb_proto_rawDescGZIP(), []int{2}
}

type NodeState int32

const (
	NodeState_Unknown NodeState = 0
	NodeState_Alive   NodeState = 1
	NodeState_Suspect NodeState = 2
	NodeState_Quited  NodeState = 3
)

// Enum value maps for NodeState.
var (
	NodeState_name = map[int32]string{
		0: "Unknown",
		1: "Alive",
		2: "Suspect",
		3: "Quited",
	}
	NodeState_value = map[string]int32{
		"Unknown": 0,
		"Alive":   1,
		"Suspect": 2,
		"Quited":  3,
	}
)

func (x NodeState) Enum() *NodeState {
	p := new(NodeState)
	*p = x
	return p
}

func (x NodeState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NodeState) Descriptor() protoreflect.EnumDescriptor {
	return file_inodedb_proto_enumTypes[3].Descriptor()
}

func (NodeState) Type() protoreflect.EnumType {
	return &file_inodedb_proto_enumTypes[3]
}

func (x NodeState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NodeState.Descriptor instead.
func (NodeState) EnumDescriptor() ([]byte, []int) {
	return file_inodedb_proto_rawDescGZIP(), []int{3}
}

type DiskStatus int32

const (
	DiskStatus_DiskStatusUnknown   DiskStatus = 0
	DiskStatus_DiskStatusNormal    DiskStatus = 1
	DiskStatus_DiskStatusBroken    DiskStatus = 2
	DiskStatus_DiskStatusRepairing DiskStatus = 3
	DiskStatus_DiskStatusRepaired  DiskStatus = 4
)

// Enum value maps for DiskStatus.
var (
	DiskStatus_name = map[int32]string{
		0: "DiskStatusUnknown",
		1: "DiskStatusNormal",
		2: "DiskStatusBroken",
		3: "DiskStatusRepairing",
		4: "DiskStatusRepaired",
	}
	DiskStatus_value = map[string]int32{
		"DiskStatusUnknown":   0,
		"DiskStatusNormal":    1,
		"DiskStatusBroken":    2,
		"DiskStatusRepairing": 3,
		"DiskStatusRepaired":  4,
	}
)

func (x DiskStatus) Enum() *DiskStatus {
	p := new(DiskStatus)
	*p = x
	return p
}

func (x DiskStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DiskStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_inodedb_proto_enumTypes[4].Descriptor()
}

func (DiskStatus) Type() protoreflect.EnumType {
	return &file_inodedb_proto_enumTypes[4]
}

func (x DiskStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DiskStatus.Descriptor instead.
func (DiskStatus) EnumDescriptor() ([]byte, []int) {
	return file_inodedb_proto_rawDescGZIP(), []int{4}
}

type DropStatus int32

const (
	DropStatus_DropUnknown DropStatus = 0
	DropStatus_Dropping    DropStatus = 1
	DropStatus_Dropped     DropStatus = 2
)

// Enum value maps for DropStatus.
var (
	DropStatus_name = map[int32]string{
		0: "DropUnknown",
		1: "Dropping",
		2: "Dropped",
	}
	DropStatus_value = map[string]int32{
		"DropUnknown": 0,
		"Dropping":    1,
		"Dropped":     2,
	}
)

func (x DropStatus) Enum() *DropStatus {
	p := new(DropStatus)
	*p = x
	return p
}

func (x DropStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DropStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_inodedb_proto_enumTypes[5].Descriptor()
}

func (DropStatus) Type() protoreflect.EnumType {
	return &file_inodedb_proto_enumTypes[5]
}

func (x DropStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DropStatus.Descriptor instead.
func (DropStatus) EnumDescriptor() ([]byte, []int) {
	return file_inodedb_proto_rawDescGZIP(), []int{5}
}

type FieldType int32

const (
	FieldType_Bool      FieldType = 0
	FieldType_Int       FieldType = 1
	FieldType_Float     FieldType = 2
	FieldType_String    FieldType = 3
	FieldType_Embedding FieldType = 4
)

// Enum value maps for FieldType.
var (
	FieldType_name = map[int32]string{
		0: "Bool",
		1: "Int",
		2: "Float",
		3: "String",
		4: "Embedding",
	}
	FieldType_value = map[string]int32{
		"Bool":      0,
		"Int":       1,
		"Float":     2,
		"String":    3,
		"Embedding": 4,
	}
)

func (x FieldType) Enum() *FieldType {
	p := new(FieldType)
	*p = x
	return p
}

func (x FieldType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FieldType) Descriptor() protoreflect.EnumDescriptor {
	return file_inodedb_proto_enumTypes[6].Descriptor()
}

func (FieldType) Type() protoreflect.EnumType {
	return &file_inodedb_proto_enumTypes[6]
}

func (x FieldType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FieldType.Descriptor instead.
func (FieldType) EnumDescriptor() ([]byte, []int) {
	return file_inodedb_proto_rawDescGZIP(), []int{6}
}

type IndexOption int32

const (
	IndexOption_Null     IndexOption = 0
	IndexOption_Indexed  IndexOption = 1
	IndexOption_Fulltext IndexOption = 2
	IndexOption_Unique   IndexOption = 3
)

// Enum value maps for IndexOption.
var (
	IndexOption_name = map[int32]string{
		0: "Null",
		1: "Indexed",
		2: "Fulltext",
		3: "Unique",
	}
	IndexOption_value = map[string]int32{
		"Null":     0,
		"Indexed":  1,
		"Fulltext": 2,
		"Unique":   3,
	}
)

func (x IndexOption) Enum() *IndexOption {
	p := new(IndexOption)
	*p = x
	return p
}

func (x IndexOption) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (IndexOption) Descriptor() protoreflect.EnumDescriptor {
	return file_inodedb_proto_enumTypes[7].Descriptor()
}

func (IndexOption) Type() protoreflect.EnumType {
	return &file_inodedb_proto_enumTypes[7]
}

func (x IndexOption) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use IndexOption.Descriptor instead.
func (IndexOption) EnumDescriptor() ([]byte, []int) {
	return file_inodedb_proto_rawDescGZIP(), []int{7}
}

type CatalogChangeType int32

const (
	CatalogChangeType_AddSpace    CatalogChangeType = 0
	CatalogChangeType_DeleteSpace CatalogChangeType = 1
	CatalogChangeType_AddShard    CatalogChangeType = 2
)

// Enum value maps for CatalogChangeType.
var (
	CatalogChangeType_name = map[int32]string{
		0: "AddSpace",
		1: "DeleteSpace",
		2: "AddShard",
	}
	CatalogChangeType_value = map[string]int32{
		"AddSpace":    0,
		"DeleteSpace": 1,
		"AddShard":    2,
	}
)

func (x CatalogChangeType) Enum() *CatalogChangeType {
	p := new(CatalogChangeType)
	*p = x
	return p
}

func (x CatalogChangeType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CatalogChangeType) Descriptor() protoreflect.EnumDescriptor {
	return file_inodedb_proto_enumTypes[8].Descriptor()
}

func (CatalogChangeType) Type() protoreflect.EnumType {
	return &file_inodedb_proto_enumTypes[8]
}

func (x CatalogChangeType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CatalogChangeType.Descriptor instead.
func (CatalogChangeType) EnumDescriptor() ([]byte, []int) {
	return file_inodedb_proto_rawDescGZIP(), []int{8}
}

type ShardTaskType int32

const (
	ShardTaskType_ClearShard ShardTaskType = 0
	ShardTaskType_Checkpoint ShardTaskType = 1
)

// Enum value maps for ShardTaskType.
var (
	ShardTaskType_name = map[int32]string{
		0: "ClearShard",
		1: "Checkpoint",
	}
	ShardTaskType_value = map[string]int32{
		"ClearShard": 0,
		"Checkpoint": 1,
	}
)

func (x ShardTaskType) Enum() *ShardTaskType {
	p := new(ShardTaskType)
	*p = x
	return p
}

func (x ShardTaskType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ShardTaskType) Descriptor() protoreflect.EnumDescriptor {
	return file_inodedb_proto_enumTypes[9].Descriptor()
}

func (ShardTaskType) Type() protoreflect.EnumType {
	return &file_inodedb_proto_enumTypes[9]
}

func (x ShardTaskType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ShardTaskType.Descriptor instead.
func (ShardTaskType) EnumDescriptor() ([]byte, []int) {
	return file_inodedb_proto_rawDescGZIP(), []int{9}
}

type ShardUpdateType int32

const (
	ShardUpdateType_AddMember    ShardUpdateType = 0
	ShardUpdateType_RemoveMember ShardUpdateType = 1
	ShardUpdateType_SetNormal    ShardUpdateType = 2
)

// Enum value maps for ShardUpdateType.
var (
	ShardUpdateType_name = map[int32]string{
		0: "AddMember",
		1: "RemoveMember",
		2: "SetNormal",
	}
	ShardUpdateType_value = map[string]int32{
		"AddMember":    0,
		"RemoveMember": 1,
		"SetNormal":    2,
	}
)

func (x ShardUpdateType) Enum() *ShardUpdateType {
	p := new(ShardUpdateType)
	*p = x
	return p
}

func (x ShardUpdateType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ShardUpdateType) Descriptor() protoreflect.EnumDescriptor {
	return file_inodedb_proto_enumTypes[10].Descriptor()
}

func (ShardUpdateType) Type() protoreflect.EnumType {
	return &file_inodedb_proto_enumTypes[10]
}

func (x ShardUpdateType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ShardUpdateType.Descriptor instead.
func (ShardUpdateType) EnumDescriptor() ([]byte, []int) {
	return file_inodedb_proto_rawDescGZIP(), []int{10}
}

type RaftStatus int32

const (
	RaftStatus_RaftUnknown RaftStatus = 0
	RaftStatus_RaftNormal  RaftStatus = 1
)

// Enum value maps for RaftStatus.
var (
	RaftStatus_name = map[int32]string{
		0: "RaftUnknown",
		1: "RaftNormal",
	}
	RaftStatus_value = map[string]int32{
		"RaftUnknown": 0,
		"RaftNormal":  1,
	}
)

func (x RaftStatus) Enum() *RaftStatus {
	p := new(RaftStatus)
	*p = x
	return p
}

func (x RaftStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RaftStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_inodedb_proto_enumTypes[11].Descriptor()
}

func (RaftStatus) Type() protoreflect.EnumType {
	return &file_inodedb_proto_enumTypes[11]
}

func (x RaftStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RaftStatus.Descriptor instead.
func (RaftStatus) EnumDescriptor() ([]byte, []int) {
	return file_inodedb_proto_rawDescGZIP(), []int{11}
}

type Node struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SetId    uint32     `protobuf:"varint,1,opt,name=set_id,json=setId,proto3" json:"set_id,omitempty"`
	Addr     string     `protobuf:"bytes,2,opt,name=addr,proto3" json:"addr,omitempty"`
	GrpcPort uint32     `protobuf:"varint,3,opt,name=grpc_port,json=grpcPort,proto3" json:"grpc_port,omitempty"` // addr + grpc_port should be unique
	HttpPort uint32     `protobuf:"varint,4,opt,name=http_port,json=httpPort,proto3" json:"http_port,omitempty"`
	RaftPort uint32     `protobuf:"varint,5,opt,name=raft_port,json=raftPort,proto3" json:"raft_port,omitempty"`
	Az       string     `protobuf:"bytes,6,opt,name=az,proto3" json:"az,omitempty"`
	Rack     string     `protobuf:"bytes,7,opt,name=rack,proto3" json:"rack,omitempty"`
	Roles    []NodeRole `protobuf:"varint,8,rep,packed,name=roles,proto3,enum=inodedb.proto.NodeRole" json:"roles,omitempty"`
	State    NodeState  `protobuf:"varint,9,opt,name=state,proto3,enum=inodedb.proto.NodeState" json:"state,omitempty"`
}

func (x *Node) Reset() {
	*x = Node{}
	if protoimpl.UnsafeEnabled {
		mi := &file_inodedb_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Node) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Node) ProtoMessage() {}

func (x *Node) ProtoReflect() protoreflect.Message {
	mi := &file_inodedb_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Node.ProtoReflect.Descriptor instead.
func (*Node) Descriptor() ([]byte, []int) {
	return file_inodedb_proto_rawDescGZIP(), []int{0}
}

func (x *Node) GetSetId() uint32 {
	if x != nil {
		return x.SetId
	}
	return 0
}

func (x *Node) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *Node) GetGrpcPort() uint32 {
	if x != nil {
		return x.GrpcPort
	}
	return 0
}

func (x *Node) GetHttpPort() uint32 {
	if x != nil {
		return x.HttpPort
	}
	return 0
}

func (x *Node) GetRaftPort() uint32 {
	if x != nil {
		return x.RaftPort
	}
	return 0
}

func (x *Node) GetAz() string {
	if x != nil {
		return x.Az
	}
	return ""
}

func (x *Node) GetRack() string {
	if x != nil {
		return x.Rack
	}
	return ""
}

func (x *Node) GetRoles() []NodeRole {
	if x != nil {
		return x.Roles
	}
	return nil
}

func (x *Node) GetState() NodeState {
	if x != nil {
		return x.State
	}
	return NodeState_Unknown
}

type Disk struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         uint32      `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Node       *Node       `protobuf:"bytes,2,opt,name=node,proto3" json:"node,omitempty"`
	Port       uint32      `protobuf:"varint,3,opt,name=port,proto3" json:"port,omitempty"`
	Path       string      `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	Status     DiskStatus  `protobuf:"varint,5,opt,name=status,proto3,enum=inodedb.proto.DiskStatus" json:"status,omitempty"`
	Readonly   bool        `protobuf:"varint,6,opt,name=readonly,proto3" json:"readonly,omitempty"`
	CreateAt   uint64      `protobuf:"varint,7,opt,name=create_at,json=createAt,proto3" json:"create_at,omitempty"`
	LastUpdate uint64      `protobuf:"varint,8,opt,name=last_update,json=lastUpdate,proto3" json:"last_update,omitempty"`
	DropStatus DropStatus  `protobuf:"varint,9,opt,name=drop_status,json=dropStatus,proto3,enum=inodedb.proto.DropStatus" json:"drop_status,omitempty"`
	Info       *DiskReport `protobuf:"bytes,10,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *Disk) Reset() {
	*x = Disk{}
	if protoimpl.UnsafeEnabled {
		mi := &file_inodedb_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Disk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Disk) ProtoMessage() {}

func (x *Disk) ProtoReflect() protoreflect.Message {
	mi := &file_inodedb_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Disk.ProtoReflect.Descriptor instead.
func (*Disk) Descriptor() ([]byte, []int) {
	return file_inodedb_proto_rawDescGZIP(), []int{1}
}

func (x *Disk) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Disk) GetNode() *Node {
	if x != nil {
		return x.Node
	}
	return nil
}

func (x *Disk) GetPort() uint32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *Disk) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *Disk) GetStatus() DiskStatus {
	if x != nil {
		return x.Status
	}
	return DiskStatus_DiskStatusUnknown
}

func (x *Disk) GetReadonly() bool {
	if x != nil {
		return x.Readonly
	}
	return false
}

func (x *Disk) GetCreateAt() uint64 {
	if x != nil {
		return x.CreateAt
	}
	return 0
}

func (x *Disk) GetLastUpdate() uint64 {
	if x != nil {
		return x.LastUpdate
	}
	return 0
}

func (x *Disk) GetDropStatus() DropStatus {
	if x != nil {
		return x.DropStatus
	}
	return DropStatus_DropUnknown
}

func (x *Disk) GetInfo() *DiskReport {
	if x != nil {
		return x.Info
	}
	return nil
}

type DiskReport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Used     uint64 `protobuf:"varint,2,opt,name=used,proto3" json:"used,omitempty"`
	Total    uint64 `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
	ShardCnt uint64 `protobuf:"varint,4,opt,name=shardCnt,proto3" json:"shardCnt,omitempty"`
}

func (x *DiskReport) Reset() {
	*x = DiskReport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_inodedb_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiskReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiskReport) ProtoMessage() {}

func (x *DiskReport) ProtoReflect() protoreflect.Message {
	mi := &file_inodedb_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiskReport.ProtoReflect.Descriptor instead.
func (*DiskReport) Descriptor() ([]byte, []int) {
	return file_inodedb_proto_rawDescGZIP(), []int{2}
}

func (x *DiskReport) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DiskReport) GetUsed() uint64 {
	if x != nil {
		return x.Used
	}
	return 0
}

func (x *DiskReport) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *DiskReport) GetShardCnt() uint64 {
	if x != nil {
		return x.ShardCnt
	}
	return 0
}

type SpaceMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sid         uint64       `protobuf:"varint,1,opt,name=sid,proto3" json:"sid,omitempty"`
	Name        string       `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Type        SpaceType    `protobuf:"varint,3,opt,name=type,proto3,enum=inodedb.proto.SpaceType" json:"type,omitempty"`
	FixedFields []*FieldMeta `protobuf:"bytes,4,rep,name=fixed_fields,json=fixedFields,proto3" json:"fixed_fields,omitempty"`
	Shards      []*Shard     `protobuf:"bytes,5,rep,name=shards,proto3" json:"shards,omitempty"`
}

func (x *SpaceMeta) Reset() {
	*x = SpaceMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_inodedb_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpaceMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpaceMeta) ProtoMessage() {}

func (x *SpaceMeta) ProtoReflect() protoreflect.Message {
	mi := &file_inodedb_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpaceMeta.ProtoReflect.Descriptor instead.
func (*SpaceMeta) Descriptor() ([]byte, []int) {
	return file_inodedb_proto_rawDescGZIP(), []int{3}
}

func (x *SpaceMeta) GetSid() uint64 {
	if x != nil {
		return x.Sid
	}
	return 0
}

func (x *SpaceMeta) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SpaceMeta) GetType() SpaceType {
	if x != nil {
		return x.Type
	}
	return SpaceType_Inode
}

func (x *SpaceMeta) GetFixedFields() []*FieldMeta {
	if x != nil {
		return x.FixedFields
	}
	return nil
}

func (x *SpaceMeta) GetShards() []*Shard {
	if x != nil {
		return x.Shards
	}
	return nil
}

type Shard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        uint32       `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Epoch     uint64       `protobuf:"varint,2,opt,name=epoch,proto3" json:"epoch,omitempty"`
	InoLimit  uint64       `protobuf:"varint,3,opt,name=ino_limit,json=inoLimit,proto3" json:"ino_limit,omitempty"`
	InoUsed   uint64       `protobuf:"varint,4,opt,name=ino_used,json=inoUsed,proto3" json:"ino_used,omitempty"`
	LeaderId  uint32       `protobuf:"varint,5,opt,name=leader_id,json=leaderId,proto3" json:"leader_id,omitempty"` // 0 means no leader
	Nodes     []*ShardNode `protobuf:"bytes,6,rep,name=nodes,proto3" json:"nodes,omitempty"`                        // nodes related to replicate nodes or stripe nodes
	InoCursor uint64       `protobuf:"varint,7,opt,name=ino_cursor,json=inoCursor,proto3" json:"ino_cursor,omitempty"`
	LinkCount uint64       `protobuf:"varint,8,opt,name=link_count,json=linkCount,proto3" json:"link_count,omitempty"`
}

func (x *Shard) Reset() {
	*x = Shard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_inodedb_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Shard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Shard) ProtoMessage() {}

func (x *Shard) ProtoReflect() protoreflect.Message {
	mi := &file_inodedb_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Shard.ProtoReflect.Descriptor instead.
func (*Shard) Descriptor() ([]byte, []int) {
	return file_inodedb_proto_rawDescGZIP(), []int{4}
}

func (x *Shard) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Shard) GetEpoch() uint64 {
	if x != nil {
		return x.Epoch
	}
	return 0
}

func (x *Shard) GetInoLimit() uint64 {
	if x != nil {
		return x.InoLimit
	}
	return 0
}

func (x *Shard) GetInoUsed() uint64 {
	if x != nil {
		return x.InoUsed
	}
	return 0
}

func (x *Shard) GetLeaderId() uint32 {
	if x != nil {
		return x.LeaderId
	}
	return 0
}

func (x *Shard) GetNodes() []*ShardNode {
	if x != nil {
		return x.Nodes
	}
	return nil
}

func (x *Shard) GetInoCursor() uint64 {
	if x != nil {
		return x.InoCursor
	}
	return 0
}

func (x *Shard) GetLinkCount() uint64 {
	if x != nil {
		return x.LinkCount
	}
	return 0
}

type ShardNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      uint32     `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` // disk id
	Learner bool       `protobuf:"varint,2,opt,name=learner,proto3" json:"learner,omitempty"`
	Status  RaftStatus `protobuf:"varint,3,opt,name=status,proto3,enum=inodedb.proto.RaftStatus" json:"status,omitempty"`
}

func (x *ShardNode) Reset() {
	*x = ShardNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_inodedb_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShardNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShardNode) ProtoMessage() {}

func (x *ShardNode) ProtoReflect() protoreflect.Message {
	mi := &file_inodedb_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShardNode.ProtoReflect.Descriptor instead.
func (*ShardNode) Descriptor() ([]byte, []int) {
	return file_inodedb_proto_rawDescGZIP(), []int{5}
}

func (x *ShardNode) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ShardNode) GetLearner() bool {
	if x != nil {
		return x.Learner
	}
	return false
}

func (x *ShardNode) GetStatus() RaftStatus {
	if x != nil {
		return x.Status
	}
	return RaftStatus_RaftUnknown
}

type Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ino    uint64   `protobuf:"varint,1,opt,name=ino,proto3" json:"ino,omitempty"`
	Links  uint64   `protobuf:"varint,2,opt,name=links,proto3" json:"links,omitempty"`
	Fields []*Field `protobuf:"bytes,3,rep,name=fields,proto3" json:"fields,omitempty"`
}

func (x *Item) Reset() {
	*x = Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_inodedb_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Item) ProtoMessage() {}

func (x *Item) ProtoReflect() protoreflect.Message {
	mi := &file_inodedb_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Item.ProtoReflect.Descriptor instead.
func (*Item) Descriptor() ([]byte, []int) {
	return file_inodedb_proto_rawDescGZIP(), []int{6}
}

func (x *Item) GetIno() uint64 {
	if x != nil {
		return x.Ino
	}
	return 0
}

func (x *Item) GetLinks() uint64 {
	if x != nil {
		return x.Links
	}
	return 0
}

func (x *Item) GetFields() []*Field {
	if x != nil {
		return x.Fields
	}
	return nil
}

type Field struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Value []byte `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Field) Reset() {
	*x = Field{}
	if protoimpl.UnsafeEnabled {
		mi := &file_inodedb_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Field) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Field) ProtoMessage() {}

func (x *Field) ProtoReflect() protoreflect.Message {
	mi := &file_inodedb_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Field.ProtoReflect.Descriptor instead.
func (*Field) Descriptor() ([]byte, []int) {
	return file_inodedb_proto_rawDescGZIP(), []int{7}
}

func (x *Field) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Field) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type FieldMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string      `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type    FieldType   `protobuf:"varint,2,opt,name=type,proto3,enum=inodedb.proto.FieldType" json:"type,omitempty"`
	Indexed IndexOption `protobuf:"varint,3,opt,name=indexed,proto3,enum=inodedb.proto.IndexOption" json:"indexed,omitempty"`
}

func (x *FieldMeta) Reset() {
	*x = FieldMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_inodedb_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FieldMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FieldMeta) ProtoMessage() {}

func (x *FieldMeta) ProtoReflect() protoreflect.Message {
	mi := &file_inodedb_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FieldMeta.ProtoReflect.Descriptor instead.
func (*FieldMeta) Descriptor() ([]byte, []int) {
	return file_inodedb_proto_rawDescGZIP(), []int{8}
}

func (x *FieldMeta) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FieldMeta) GetType() FieldType {
	if x != nil {
		return x.Type
	}
	return FieldType_Bool
}

func (x *FieldMeta) GetIndexed() IndexOption {
	if x != nil {
		return x.Indexed
	}
	return IndexOption_Null
}

type EmbeddingField struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Elements []float32 `protobuf:"fixed32,1,rep,packed,name=elements,proto3" json:"elements,omitempty"`
	Source   string    `protobuf:"bytes,2,opt,name=source,proto3" json:"source,omitempty"`
}

func (x *EmbeddingField) Reset() {
	*x = EmbeddingField{}
	if protoimpl.UnsafeEnabled {
		mi := &file_inodedb_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmbeddingField) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmbeddingField) ProtoMessage() {}

func (x *EmbeddingField) ProtoReflect() protoreflect.Message {
	mi := &file_inodedb_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmbeddingField.ProtoReflect.Descriptor instead.
func (*EmbeddingField) Descriptor() ([]byte, []int) {
	return file_inodedb_proto_rawDescGZIP(), []int{9}
}

func (x *EmbeddingField) GetElements() []float32 {
	if x != nil {
		return x.Elements
	}
	return nil
}

func (x *EmbeddingField) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

type Link struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Parent uint64   `protobuf:"varint,1,opt,name=parent,proto3" json:"parent,omitempty"`
	Name   string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Child  uint64   `protobuf:"varint,3,opt,name=child,proto3" json:"child,omitempty"`
	Fields []*Field `protobuf:"bytes,4,rep,name=fields,proto3" json:"fields,omitempty"`
}

func (x *Link) Reset() {
	*x = Link{}
	if protoimpl.UnsafeEnabled {
		mi := &file_inodedb_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Link) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Link) ProtoMessage() {}

func (x *Link) ProtoReflect() protoreflect.Message {
	mi := &file_inodedb_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Link.ProtoReflect.Descriptor instead.
func (*Link) Descriptor() ([]byte, []int) {
	return file_inodedb_proto_rawDescGZIP(), []int{10}
}

func (x *Link) GetParent() uint64 {
	if x != nil {
		return x.Parent
	}
	return 0
}

func (x *Link) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Link) GetChild() uint64 {
	if x != nil {
		return x.Child
	}
	return 0
}

func (x *Link) GetFields() []*Field {
	if x != nil {
		return x.Fields
	}
	return nil
}

type Unlink struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Parent uint64 `protobuf:"varint,1,opt,name=parent,proto3" json:"parent,omitempty"`
	Name   string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Unlink) Reset() {
	*x = Unlink{}
	if protoimpl.UnsafeEnabled {
		mi := &file_inodedb_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Unlink) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Unlink) ProtoMessage() {}

func (x *Unlink) ProtoReflect() protoreflect.Message {
	mi := &file_inodedb_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Unlink.ProtoReflect.Descriptor instead.
func (*Unlink) Descriptor() ([]byte, []int) {
	return file_inodedb_proto_rawDescGZIP(), []int{11}
}

func (x *Unlink) GetParent() uint64 {
	if x != nil {
		return x.Parent
	}
	return 0
}

func (x *Unlink) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ShardReport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sid    uint64 `protobuf:"varint,1,opt,name=sid,proto3" json:"sid,omitempty"`
	DiskId uint32 `protobuf:"varint,2,opt,name=disk_id,json=diskId,proto3" json:"disk_id,omitempty"`
	Shard  *Shard `protobuf:"bytes,3,opt,name=shard,proto3" json:"shard,omitempty"`
}

func (x *ShardReport) Reset() {
	*x = ShardReport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_inodedb_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShardReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShardReport) ProtoMessage() {}

func (x *ShardReport) ProtoReflect() protoreflect.Message {
	mi := &file_inodedb_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShardReport.ProtoReflect.Descriptor instead.
func (*ShardReport) Descriptor() ([]byte, []int) {
	return file_inodedb_proto_rawDescGZIP(), []int{12}
}

func (x *ShardReport) GetSid() uint64 {
	if x != nil {
		return x.Sid
	}
	return 0
}

func (x *ShardReport) GetDiskId() uint32 {
	if x != nil {
		return x.DiskId
	}
	return 0
}

func (x *ShardReport) GetShard() *Shard {
	if x != nil {
		return x.Shard
	}
	return nil
}

type CatalogChangeItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RouteVersion uint64            `protobuf:"varint,1,opt,name=route_version,json=routeVersion,proto3" json:"route_version,omitempty"`
	Type         CatalogChangeType `protobuf:"varint,2,opt,name=type,proto3,enum=inodedb.proto.CatalogChangeType" json:"type,omitempty"`
	Item         *anypb.Any        `protobuf:"bytes,3,opt,name=item,proto3" json:"item,omitempty"`
}

func (x *CatalogChangeItem) Reset() {
	*x = CatalogChangeItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_inodedb_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CatalogChangeItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CatalogChangeItem) ProtoMessage() {}

func (x *CatalogChangeItem) ProtoReflect() protoreflect.Message {
	mi := &file_inodedb_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CatalogChangeItem.ProtoReflect.Descriptor instead.
func (*CatalogChangeItem) Descriptor() ([]byte, []int) {
	return file_inodedb_proto_rawDescGZIP(), []int{13}
}

func (x *CatalogChangeItem) GetRouteVersion() uint64 {
	if x != nil {
		return x.RouteVersion
	}
	return 0
}

func (x *CatalogChangeItem) GetType() CatalogChangeType {
	if x != nil {
		return x.Type
	}
	return CatalogChangeType_AddSpace
}

func (x *CatalogChangeItem) GetItem() *anypb.Any {
	if x != nil {
		return x.Item
	}
	return nil
}

type CatalogChangeSpaceAdd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sid         uint64       `protobuf:"varint,1,opt,name=sid,proto3" json:"sid,omitempty"`
	Name        string       `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Type        SpaceType    `protobuf:"varint,3,opt,name=type,proto3,enum=inodedb.proto.SpaceType" json:"type,omitempty"`
	FixedFields []*FieldMeta `protobuf:"bytes,4,rep,name=fixed_fields,json=fixedFields,proto3" json:"fixed_fields,omitempty"`
}

func (x *CatalogChangeSpaceAdd) Reset() {
	*x = CatalogChangeSpaceAdd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_inodedb_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CatalogChangeSpaceAdd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CatalogChangeSpaceAdd) ProtoMessage() {}

func (x *CatalogChangeSpaceAdd) ProtoReflect() protoreflect.Message {
	mi := &file_inodedb_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CatalogChangeSpaceAdd.ProtoReflect.Descriptor instead.
func (*CatalogChangeSpaceAdd) Descriptor() ([]byte, []int) {
	return file_inodedb_proto_rawDescGZIP(), []int{14}
}

func (x *CatalogChangeSpaceAdd) GetSid() uint64 {
	if x != nil {
		return x.Sid
	}
	return 0
}

func (x *CatalogChangeSpaceAdd) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CatalogChangeSpaceAdd) GetType() SpaceType {
	if x != nil {
		return x.Type
	}
	return SpaceType_Inode
}

func (x *CatalogChangeSpaceAdd) GetFixedFields() []*FieldMeta {
	if x != nil {
		return x.FixedFields
	}
	return nil
}

type CatalogChangeSpaceDelete struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sid  uint64 `protobuf:"varint,1,opt,name=sid,proto3" json:"sid,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *CatalogChangeSpaceDelete) Reset() {
	*x = CatalogChangeSpaceDelete{}
	if protoimpl.UnsafeEnabled {
		mi := &file_inodedb_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CatalogChangeSpaceDelete) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CatalogChangeSpaceDelete) ProtoMessage() {}

func (x *CatalogChangeSpaceDelete) ProtoReflect() protoreflect.Message {
	mi := &file_inodedb_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CatalogChangeSpaceDelete.ProtoReflect.Descriptor instead.
func (*CatalogChangeSpaceDelete) Descriptor() ([]byte, []int) {
	return file_inodedb_proto_rawDescGZIP(), []int{15}
}

func (x *CatalogChangeSpaceDelete) GetSid() uint64 {
	if x != nil {
		return x.Sid
	}
	return 0
}

func (x *CatalogChangeSpaceDelete) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type CatalogChangeShardAdd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sid      uint64       `protobuf:"varint,1,opt,name=sid,proto3" json:"sid,omitempty"`
	Name     string       `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ShardId  uint32       `protobuf:"varint,3,opt,name=shard_id,json=shardId,proto3" json:"shard_id,omitempty"`
	Epoch    uint64       `protobuf:"varint,4,opt,name=epoch,proto3" json:"epoch,omitempty"`
	InoLimit uint64       `protobuf:"varint,5,opt,name=ino_limit,json=inoLimit,proto3" json:"ino_limit,omitempty"`
	Leader   uint32       `protobuf:"varint,6,opt,name=leader,proto3" json:"leader,omitempty"`
	Nodes    []*ShardNode `protobuf:"bytes,7,rep,name=nodes,proto3" json:"nodes,omitempty"`
}

func (x *CatalogChangeShardAdd) Reset() {
	*x = CatalogChangeShardAdd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_inodedb_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CatalogChangeShardAdd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CatalogChangeShardAdd) ProtoMessage() {}

func (x *CatalogChangeShardAdd) ProtoReflect() protoreflect.Message {
	mi := &file_inodedb_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CatalogChangeShardAdd.ProtoReflect.Descriptor instead.
func (*CatalogChangeShardAdd) Descriptor() ([]byte, []int) {
	return file_inodedb_proto_rawDescGZIP(), []int{16}
}

func (x *CatalogChangeShardAdd) GetSid() uint64 {
	if x != nil {
		return x.Sid
	}
	return 0
}

func (x *CatalogChangeShardAdd) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CatalogChangeShardAdd) GetShardId() uint32 {
	if x != nil {
		return x.ShardId
	}
	return 0
}

func (x *CatalogChangeShardAdd) GetEpoch() uint64 {
	if x != nil {
		return x.Epoch
	}
	return 0
}

func (x *CatalogChangeShardAdd) GetInoLimit() uint64 {
	if x != nil {
		return x.InoLimit
	}
	return 0
}

func (x *CatalogChangeShardAdd) GetLeader() uint32 {
	if x != nil {
		return x.Leader
	}
	return 0
}

func (x *CatalogChangeShardAdd) GetNodes() []*ShardNode {
	if x != nil {
		return x.Nodes
	}
	return nil
}

type ShardTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type      ShardTaskType `protobuf:"varint,1,opt,name=type,proto3,enum=inodedb.proto.ShardTaskType" json:"type,omitempty"`
	SpaceName string        `protobuf:"bytes,2,opt,name=space_name,json=spaceName,proto3" json:"space_name,omitempty"`
	ShardId   uint32        `protobuf:"varint,3,opt,name=shard_id,json=shardId,proto3" json:"shard_id,omitempty"`
	Epoch     uint64        `protobuf:"varint,4,opt,name=epoch,proto3" json:"epoch,omitempty"`
	Reserved  *anypb.Any    `protobuf:"bytes,5,opt,name=reserved,proto3" json:"reserved,omitempty"`
}

func (x *ShardTask) Reset() {
	*x = ShardTask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_inodedb_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShardTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShardTask) ProtoMessage() {}

func (x *ShardTask) ProtoReflect() protoreflect.Message {
	mi := &file_inodedb_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShardTask.ProtoReflect.Descriptor instead.
func (*ShardTask) Descriptor() ([]byte, []int) {
	return file_inodedb_proto_rawDescGZIP(), []int{17}
}

func (x *ShardTask) GetType() ShardTaskType {
	if x != nil {
		return x.Type
	}
	return ShardTaskType_ClearShard
}

func (x *ShardTask) GetSpaceName() string {
	if x != nil {
		return x.SpaceName
	}
	return ""
}

func (x *ShardTask) GetShardId() uint32 {
	if x != nil {
		return x.ShardId
	}
	return 0
}

func (x *ShardTask) GetEpoch() uint64 {
	if x != nil {
		return x.Epoch
	}
	return 0
}

func (x *ShardTask) GetReserved() *anypb.Any {
	if x != nil {
		return x.Reserved
	}
	return nil
}

var File_inodedb_proto protoreflect.FileDescriptor

var file_inodedb_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x69, 0x6e, 0x6f, 0x64, 0x65, 0x64, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x0d, 0x69, 0x6e, 0x6f, 0x64, 0x65, 0x64, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8b, 0x02, 0x0a, 0x04, 0x4e, 0x6f,
	0x64, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x73, 0x65, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x64, 0x64,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x12, 0x1b, 0x0a,
	0x09, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x08, 0x67, 0x72, 0x70, 0x63, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x68, 0x74,
	0x74, 0x70, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x68,
	0x74, 0x74, 0x70, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x61, 0x66, 0x74, 0x5f,
	0x70, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x72, 0x61, 0x66, 0x74,
	0x50, 0x6f, 0x72, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x61, 0x7a, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x61, 0x7a, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x63, 0x6b, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x72, 0x61, 0x63, 0x6b, 0x12, 0x2d, 0x0a, 0x05, 0x72, 0x6f, 0x6c, 0x65,
	0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x69, 0x6e, 0x6f, 0x64, 0x65, 0x64,
	0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x6f, 0x6c, 0x65,
	0x52, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0x2e, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x69, 0x6e, 0x6f, 0x64, 0x65, 0x64, 0x62,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0xdf, 0x02, 0x0a, 0x04, 0x44, 0x69, 0x73, 0x6b,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x27, 0x0a, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x69, 0x6e, 0x6f, 0x64, 0x65, 0x64, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e,
	0x6f, 0x64, 0x65, 0x52, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74,
	0x68, 0x12, 0x31, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x19, 0x2e, 0x69, 0x6e, 0x6f, 0x64, 0x65, 0x64, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x44, 0x69, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x61, 0x64, 0x6f, 0x6e, 0x6c, 0x79,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x72, 0x65, 0x61, 0x64, 0x6f, 0x6e, 0x6c, 0x79,
	0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x12, 0x1f, 0x0a,
	0x0b, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x3a,
	0x0a, 0x0b, 0x64, 0x72, 0x6f, 0x70, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x69, 0x6e, 0x6f, 0x64, 0x65, 0x64, 0x62, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x72, 0x6f, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0a,
	0x64, 0x72, 0x6f, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2d, 0x0a, 0x04, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x69, 0x6e, 0x6f, 0x64, 0x65,
	0x64, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x69, 0x73, 0x6b, 0x52, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x62, 0x0a, 0x0a, 0x44, 0x69, 0x73,
	0x6b, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x75, 0x73, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x68, 0x61, 0x72, 0x64, 0x43, 0x6e, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x08, 0x73, 0x68, 0x61, 0x72, 0x64, 0x43, 0x6e, 0x74, 0x22, 0xca, 0x01,
	0x0a, 0x09, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x73,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x73, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x2c, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x18, 0x2e, 0x69, 0x6e, 0x6f, 0x64, 0x65, 0x64, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x53, 0x70, 0x61, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x3b, 0x0a, 0x0c, 0x66, 0x69, 0x78, 0x65, 0x64, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x69, 0x6e, 0x6f, 0x64, 0x65, 0x64, 0x62, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x65, 0x74, 0x61, 0x52,
	0x0b, 0x66, 0x69, 0x78, 0x65, 0x64, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x2c, 0x0a, 0x06,
	0x73, 0x68, 0x61, 0x72, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x69,
	0x6e, 0x6f, 0x64, 0x65, 0x64, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x68, 0x61,
	0x72, 0x64, 0x52, 0x06, 0x73, 0x68, 0x61, 0x72, 0x64, 0x73, 0x22, 0xf0, 0x01, 0x0a, 0x05, 0x53,
	0x68, 0x61, 0x72, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x05, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6e,
	0x6f, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x69,
	0x6e, 0x6f, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x6e, 0x6f, 0x5f, 0x75,
	0x73, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x69, 0x6e, 0x6f, 0x55, 0x73,
	0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x2e, 0x0a, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x69, 0x6e, 0x6f, 0x64, 0x65, 0x64, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53,
	0x68, 0x61, 0x72, 0x64, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x12,
	0x1d, 0x0a, 0x0a, 0x69, 0x6e, 0x6f, 0x5f, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x09, 0x69, 0x6e, 0x6f, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x12, 0x1d,
	0x0a, 0x0a, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x09, 0x6c, 0x69, 0x6e, 0x6b, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x68, 0x0a,
	0x09, 0x53, 0x68, 0x61, 0x72, 0x64, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6c, 0x65,
	0x61, 0x72, 0x6e, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x6c, 0x65, 0x61,
	0x72, 0x6e, 0x65, 0x72, 0x12, 0x31, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x69, 0x6e, 0x6f, 0x64, 0x65, 0x64, 0x62, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x61, 0x66, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x5c, 0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d, 0x12,
	0x10, 0x0a, 0x03, 0x69, 0x6e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x69, 0x6e,
	0x6f, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x05, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x12, 0x2c, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x69, 0x6e, 0x6f, 0x64, 0x65, 0x64,
	0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x06, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x73, 0x22, 0x31, 0x0a, 0x05, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x83, 0x01, 0x0a, 0x09, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x69, 0x6e, 0x6f, 0x64, 0x65,
	0x64, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x34, 0x0a, 0x07, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x69, 0x6e, 0x6f, 0x64,
	0x65, 0x64, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x64, 0x22, 0x44,
	0x0a, 0x0e, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x02, 0x52, 0x08, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x22, 0x76, 0x0a, 0x04, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x16, 0x0a, 0x06,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x68, 0x69, 0x6c,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x12, 0x2c,
	0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x69, 0x6e, 0x6f, 0x64, 0x65, 0x64, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x22, 0x34, 0x0a, 0x06,
	0x55, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x22, 0x64, 0x0a, 0x0b, 0x53, 0x68, 0x61, 0x72, 0x64, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03,
	0x73, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x69, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x64, 0x69, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x05,
	0x73, 0x68, 0x61, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x69, 0x6e,
	0x6f, 0x64, 0x65, 0x64, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x68, 0x61, 0x72,
	0x64, 0x52, 0x05, 0x73, 0x68, 0x61, 0x72, 0x64, 0x22, 0x98, 0x01, 0x0a, 0x11, 0x43, 0x61, 0x74,
	0x61, 0x6c, 0x6f, 0x67, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x23,
	0x0a, 0x0d, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x34, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x20, 0x2e, 0x69, 0x6e, 0x6f, 0x64, 0x65, 0x64, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x28, 0x0a, 0x04, 0x69, 0x74, 0x65,
	0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x04, 0x69,
	0x74, 0x65, 0x6d, 0x22, 0xa8, 0x01, 0x0a, 0x15, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x41, 0x64, 0x64, 0x12, 0x10, 0x0a,
	0x03, 0x73, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x73, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x18, 0x2e, 0x69, 0x6e, 0x6f, 0x64, 0x65, 0x64, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x3b, 0x0a, 0x0c, 0x66, 0x69, 0x78, 0x65, 0x64, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x69, 0x6e, 0x6f, 0x64, 0x65, 0x64,
	0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x65, 0x74,
	0x61, 0x52, 0x0b, 0x66, 0x69, 0x78, 0x65, 0x64, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x22, 0x40,
	0x0a, 0x18, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x53,
	0x70, 0x61, 0x63, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x73, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x22, 0xd3, 0x01, 0x0a, 0x15, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x53, 0x68, 0x61, 0x72, 0x64, 0x41, 0x64, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x73, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x19, 0x0a, 0x08, 0x73, 0x68, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x07, 0x73, 0x68, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65,
	0x70, 0x6f, 0x63, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x65, 0x70, 0x6f, 0x63,
	0x68, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6e, 0x6f, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x69, 0x6e, 0x6f, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06,
	0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x2e, 0x0a, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18,
	0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x69, 0x6e, 0x6f, 0x64, 0x65, 0x64, 0x62, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x64, 0x4e, 0x6f, 0x64, 0x65, 0x52,
	0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x22, 0xbf, 0x01, 0x0a, 0x09, 0x53, 0x68, 0x61, 0x72, 0x64,
	0x54, 0x61, 0x73, 0x6b, 0x12, 0x30, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x69, 0x6e, 0x6f, 0x64, 0x65, 0x64, 0x62, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x68, 0x61, 0x72, 0x64, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x73, 0x68, 0x61, 0x72, 0x64, 0x49, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x05, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x12, 0x30, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x08,
	0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x2a, 0x26, 0x0a, 0x10, 0x43, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x08, 0x0a, 0x04,
	0x4a, 0x6f, 0x69, 0x6e, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x51, 0x75, 0x69, 0x74, 0x10, 0x02,
	0x2a, 0x16, 0x0a, 0x09, 0x53, 0x70, 0x61, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x09, 0x0a,
	0x05, 0x49, 0x6e, 0x6f, 0x64, 0x65, 0x10, 0x00, 0x2a, 0x3f, 0x0a, 0x08, 0x4e, 0x6f, 0x64, 0x65,
	0x52, 0x6f, 0x6c, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x10, 0x00,
	0x12, 0x0f, 0x0a, 0x0b, 0x53, 0x68, 0x61, 0x72, 0x64, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x10,
	0x01, 0x12, 0x0a, 0x0a, 0x06, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x10, 0x02, 0x12, 0x0a, 0x0a,
	0x06, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x10, 0x03, 0x2a, 0x3c, 0x0a, 0x09, 0x4e, 0x6f, 0x64,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77,
	0x6e, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x41, 0x6c, 0x69, 0x76, 0x65, 0x10, 0x01, 0x12, 0x0b,
	0x0a, 0x07, 0x53, 0x75, 0x73, 0x70, 0x65, 0x63, 0x74, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x51,
	0x75, 0x69, 0x74, 0x65, 0x64, 0x10, 0x03, 0x2a, 0x80, 0x01, 0x0a, 0x0a, 0x44, 0x69, 0x73, 0x6b,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x15, 0x0a, 0x11, 0x44, 0x69, 0x73, 0x6b, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x00, 0x12, 0x14, 0x0a,
	0x10, 0x44, 0x69, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4e, 0x6f, 0x72, 0x6d, 0x61,
	0x6c, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x44, 0x69, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x42, 0x72, 0x6f, 0x6b, 0x65, 0x6e, 0x10, 0x02, 0x12, 0x17, 0x0a, 0x13, 0x44, 0x69, 0x73,
	0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x70, 0x61, 0x69, 0x72, 0x69, 0x6e, 0x67,
	0x10, 0x03, 0x12, 0x16, 0x0a, 0x12, 0x44, 0x69, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x65, 0x70, 0x61, 0x69, 0x72, 0x65, 0x64, 0x10, 0x04, 0x2a, 0x38, 0x0a, 0x0a, 0x44, 0x72,
	0x6f, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0f, 0x0a, 0x0b, 0x44, 0x72, 0x6f, 0x70,
	0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x44, 0x72, 0x6f,
	0x70, 0x70, 0x69, 0x6e, 0x67, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x72, 0x6f, 0x70, 0x70,
	0x65, 0x64, 0x10, 0x02, 0x2a, 0x44, 0x0a, 0x09, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x08, 0x0a, 0x04, 0x42, 0x6f, 0x6f, 0x6c, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x49,
	0x6e, 0x74, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x10, 0x02, 0x12,
	0x0a, 0x0a, 0x06, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x10, 0x03, 0x12, 0x0d, 0x0a, 0x09, 0x45,
	0x6d, 0x62, 0x65, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x10, 0x04, 0x2a, 0x3e, 0x0a, 0x0b, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x75, 0x6c,
	0x6c, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x64, 0x10, 0x01,
	0x12, 0x0c, 0x0a, 0x08, 0x46, 0x75, 0x6c, 0x6c, 0x74, 0x65, 0x78, 0x74, 0x10, 0x02, 0x12, 0x0a,
	0x0a, 0x06, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x10, 0x03, 0x2a, 0x40, 0x0a, 0x11, 0x43, 0x61,
	0x74, 0x61, 0x6c, 0x6f, 0x67, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x0c, 0x0a, 0x08, 0x41, 0x64, 0x64, 0x53, 0x70, 0x61, 0x63, 0x65, 0x10, 0x00, 0x12, 0x0f, 0x0a,
	0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x10, 0x01, 0x12, 0x0c,
	0x0a, 0x08, 0x41, 0x64, 0x64, 0x53, 0x68, 0x61, 0x72, 0x64, 0x10, 0x02, 0x2a, 0x2f, 0x0a, 0x0d,
	0x53, 0x68, 0x61, 0x72, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a,
	0x0a, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x53, 0x68, 0x61, 0x72, 0x64, 0x10, 0x00, 0x12, 0x0e, 0x0a,
	0x0a, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x10, 0x01, 0x2a, 0x41, 0x0a,
	0x0f, 0x53, 0x68, 0x61, 0x72, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x0d, 0x0a, 0x09, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x10, 0x00, 0x12,
	0x10, 0x0a, 0x0c, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x10,
	0x01, 0x12, 0x0d, 0x0a, 0x09, 0x53, 0x65, 0x74, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x10, 0x02,
	0x2a, 0x2d, 0x0a, 0x0a, 0x52, 0x61, 0x66, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0f,
	0x0a, 0x0b, 0x52, 0x61, 0x66, 0x74, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x00, 0x12,
	0x0e, 0x0a, 0x0a, 0x52, 0x61, 0x66, 0x74, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x10, 0x01, 0x42,
	0x0a, 0x5a, 0x08, 0x2e, 0x2f, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_inodedb_proto_rawDescOnce sync.Once
	file_inodedb_proto_rawDescData = file_inodedb_proto_rawDesc
)

func file_inodedb_proto_rawDescGZIP() []byte {
	file_inodedb_proto_rawDescOnce.Do(func() {
		file_inodedb_proto_rawDescData = protoimpl.X.CompressGZIP(file_inodedb_proto_rawDescData)
	})
	return file_inodedb_proto_rawDescData
}

var file_inodedb_proto_enumTypes = make([]protoimpl.EnumInfo, 12)
var file_inodedb_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_inodedb_proto_goTypes = []interface{}{
	(ClusterOperation)(0),            // 0: inodedb.proto.ClusterOperation
	(SpaceType)(0),                   // 1: inodedb.proto.SpaceType
	(NodeRole)(0),                    // 2: inodedb.proto.NodeRole
	(NodeState)(0),                   // 3: inodedb.proto.NodeState
	(DiskStatus)(0),                  // 4: inodedb.proto.DiskStatus
	(DropStatus)(0),                  // 5: inodedb.proto.DropStatus
	(FieldType)(0),                   // 6: inodedb.proto.FieldType
	(IndexOption)(0),                 // 7: inodedb.proto.IndexOption
	(CatalogChangeType)(0),           // 8: inodedb.proto.CatalogChangeType
	(ShardTaskType)(0),               // 9: inodedb.proto.ShardTaskType
	(ShardUpdateType)(0),             // 10: inodedb.proto.ShardUpdateType
	(RaftStatus)(0),                  // 11: inodedb.proto.RaftStatus
	(*Node)(nil),                     // 12: inodedb.proto.Node
	(*Disk)(nil),                     // 13: inodedb.proto.Disk
	(*DiskReport)(nil),               // 14: inodedb.proto.DiskReport
	(*SpaceMeta)(nil),                // 15: inodedb.proto.SpaceMeta
	(*Shard)(nil),                    // 16: inodedb.proto.Shard
	(*ShardNode)(nil),                // 17: inodedb.proto.ShardNode
	(*Item)(nil),                     // 18: inodedb.proto.Item
	(*Field)(nil),                    // 19: inodedb.proto.Field
	(*FieldMeta)(nil),                // 20: inodedb.proto.FieldMeta
	(*EmbeddingField)(nil),           // 21: inodedb.proto.EmbeddingField
	(*Link)(nil),                     // 22: inodedb.proto.Link
	(*Unlink)(nil),                   // 23: inodedb.proto.Unlink
	(*ShardReport)(nil),              // 24: inodedb.proto.ShardReport
	(*CatalogChangeItem)(nil),        // 25: inodedb.proto.CatalogChangeItem
	(*CatalogChangeSpaceAdd)(nil),    // 26: inodedb.proto.CatalogChangeSpaceAdd
	(*CatalogChangeSpaceDelete)(nil), // 27: inodedb.proto.CatalogChangeSpaceDelete
	(*CatalogChangeShardAdd)(nil),    // 28: inodedb.proto.CatalogChangeShardAdd
	(*ShardTask)(nil),                // 29: inodedb.proto.ShardTask
	(*anypb.Any)(nil),                // 30: google.protobuf.Any
}
var file_inodedb_proto_depIdxs = []int32{
	2,  // 0: inodedb.proto.Node.roles:type_name -> inodedb.proto.NodeRole
	3,  // 1: inodedb.proto.Node.state:type_name -> inodedb.proto.NodeState
	12, // 2: inodedb.proto.Disk.node:type_name -> inodedb.proto.Node
	4,  // 3: inodedb.proto.Disk.status:type_name -> inodedb.proto.DiskStatus
	5,  // 4: inodedb.proto.Disk.drop_status:type_name -> inodedb.proto.DropStatus
	14, // 5: inodedb.proto.Disk.info:type_name -> inodedb.proto.DiskReport
	1,  // 6: inodedb.proto.SpaceMeta.type:type_name -> inodedb.proto.SpaceType
	20, // 7: inodedb.proto.SpaceMeta.fixed_fields:type_name -> inodedb.proto.FieldMeta
	16, // 8: inodedb.proto.SpaceMeta.shards:type_name -> inodedb.proto.Shard
	17, // 9: inodedb.proto.Shard.nodes:type_name -> inodedb.proto.ShardNode
	11, // 10: inodedb.proto.ShardNode.status:type_name -> inodedb.proto.RaftStatus
	19, // 11: inodedb.proto.Item.fields:type_name -> inodedb.proto.Field
	6,  // 12: inodedb.proto.FieldMeta.type:type_name -> inodedb.proto.FieldType
	7,  // 13: inodedb.proto.FieldMeta.indexed:type_name -> inodedb.proto.IndexOption
	19, // 14: inodedb.proto.Link.fields:type_name -> inodedb.proto.Field
	16, // 15: inodedb.proto.ShardReport.shard:type_name -> inodedb.proto.Shard
	8,  // 16: inodedb.proto.CatalogChangeItem.type:type_name -> inodedb.proto.CatalogChangeType
	30, // 17: inodedb.proto.CatalogChangeItem.item:type_name -> google.protobuf.Any
	1,  // 18: inodedb.proto.CatalogChangeSpaceAdd.type:type_name -> inodedb.proto.SpaceType
	20, // 19: inodedb.proto.CatalogChangeSpaceAdd.fixed_fields:type_name -> inodedb.proto.FieldMeta
	17, // 20: inodedb.proto.CatalogChangeShardAdd.nodes:type_name -> inodedb.proto.ShardNode
	9,  // 21: inodedb.proto.ShardTask.type:type_name -> inodedb.proto.ShardTaskType
	30, // 22: inodedb.proto.ShardTask.reserved:type_name -> google.protobuf.Any
	23, // [23:23] is the sub-list for method output_type
	23, // [23:23] is the sub-list for method input_type
	23, // [23:23] is the sub-list for extension type_name
	23, // [23:23] is the sub-list for extension extendee
	0,  // [0:23] is the sub-list for field type_name
}

func init() { file_inodedb_proto_init() }
func file_inodedb_proto_init() {
	if File_inodedb_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_inodedb_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Node); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_inodedb_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Disk); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_inodedb_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiskReport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_inodedb_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpaceMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_inodedb_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Shard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_inodedb_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShardNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_inodedb_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_inodedb_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Field); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_inodedb_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FieldMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_inodedb_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmbeddingField); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_inodedb_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Link); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_inodedb_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Unlink); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_inodedb_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShardReport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_inodedb_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CatalogChangeItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_inodedb_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CatalogChangeSpaceAdd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_inodedb_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CatalogChangeSpaceDelete); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_inodedb_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CatalogChangeShardAdd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_inodedb_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShardTask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_inodedb_proto_rawDesc,
			NumEnums:      12,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_inodedb_proto_goTypes,
		DependencyIndexes: file_inodedb_proto_depIdxs,
		EnumInfos:         file_inodedb_proto_enumTypes,
		MessageInfos:      file_inodedb_proto_msgTypes,
	}.Build()
	File_inodedb_proto = out.File
	file_inodedb_proto_rawDesc = nil
	file_inodedb_proto_goTypes = nil
	file_inodedb_proto_depIdxs = nil
}
